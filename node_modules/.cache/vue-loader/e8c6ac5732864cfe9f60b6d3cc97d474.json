{"remainingRequest":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\src\\components\\psychologists\\register-psychologist.vue?vue&type=style&index=0&id=021317a4&scoped=true&lang=css&","dependencies":[{"path":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\src\\components\\psychologists\\register-psychologist.vue","mtime":1637587974000},{"path":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"T:\\Universidad\\DISEÑO DE EXPERIMENTOS DE INGENIERIA DE SOFTWARE\\PROJECT PSYCHOHELP\\PsychoHelp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucm93VCB7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7Cn0K"},{"version":3,"sources":["register-psychologist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA","file":"register-psychologist.vue","sourceRoot":"src/components/psychologists","sourcesContent":["<template>\n  <v-row class=\"rowT\">\n    <v-col cols=\"5\" class=\"firstCol hidden-sm-and-down\" align-self=\"center\">\n      <v-img class=\"img ml-5 mt-10\" max-height=\"500\" max-width=\"800\" src=\"https://cdn.discordapp.com/attachments/839568290078392383/898701933408313375/unknown.png\"></v-img>\n    </v-col>\n    <v-col class=\"pr-lg-10 mb-5\" lg=\"7\" xs=\"12\">\n      <v-divider inset vertical></v-divider>\n      <h2 class=\"mt-lg-8\">¡Comienza Aquí!</h2>\n      <v-row justify=\"end\" class=\"mr-2\">\n        <v-btn plain outline to=\"/login_psycho\">¿Ya eres parte de nuestro equipo? Ingresa Aquí</v-btn>\n      </v-row>\n      <v-divider inset vertical></v-divider>\n      <form>\n        <v-sheet rounded color=#03A9F4>\n          <v-divider inset vertical></v-divider>\n          <v-text-field background-color=\"white\" outlined dense color=\"black\" class=\"mt-5 ml-10 mr-10\" v-model=\"name\" label=\"Nombres completos\"\n                        required :error-messages=\"nameErrors\"\n                        @input=\"$v.name.$touch()\"\n                        @blur=\"$v.name.$touch()\"></v-text-field>\n          <v-text-field background-color=\"white\" outlined dense color=\"black\"  class=\"mt-5 ml-10 mr-10\" v-model=\"dni\" label=\"DNI\"\n                        required :error-messages=\"dniErrors\"\n                        @input=\"$v.dni.$touch()\"\n                        @blur=\"$v.dni.$touch()\"></v-text-field>\n          <v-text-field background-color=\"white\" outlined dense color=\"black\" class=\"mt-5 ml-10 mr-10\" v-model=\"phone\" label=\"Celular\"\n                        required :error-messages=\"phoneErrors\"\n                        @input=\"$v.phone.$touch()\"\n                        @blur=\"$v.phone.$touch()\"></v-text-field>\n          <v-text-field background-color=\"white\" outlined dense color=\"black\" class=\"mt-5 ml-10 mr-10\" v-model=\"email\" label=\"Correo electrónico\"\n                        required :error-messages=\"emailErrors\"\n                        @input=\"$v.email.$touch()\"\n                        @blur=\"$v.email.$touch()\"></v-text-field>\n          <v-text-field background-color=\"white\" outlined dense color=\"black\" class=\"mt-5 ml-10 mr-10\" v-model=\"cmp\" label=\"CMP\"\n                        required :error-messages=\"cmpErrors\"\n                        @input=\"$v.cmp.$touch()\"\n                        @blur=\"$v.cmp.$touch()\"></v-text-field>\n          <v-text-field background-color=\"white\" outlined dense color=\"black\" class=\"mt-5 ml-10 mr-10\" v-model=\"password\" label=\"Password\"\n                        required :error-messages=\"passwordErrors\"\n                        @input=\"$v.password.$touch()\"\n                        @blur=\"$v.password.$touch()\"></v-text-field>\n          <v-select background-color=\"white\" outlined dense color=\"black\" class=\"mt-5 ml-10 mr-10\"\n              v-model=\"genre\"\n              :items=\"genreItems\"\n              :error-messages=\"selectErrors\"\n              label=\"Genre\"\n              required\n              @change=\"$v.genre.$touch()\"\n              @blur=\"$v.genre.$touch()\"\n          ></v-select>\n          <v-row justify=\"center\">\n            <v-btn depressed class=\"mb-3 mt-3\" @click=\"register()\" > Register </v-btn>\n          </v-row>\n          <v-row justify=\"center\">\n            <h4 class=\"mb-5\">¿Olvidaste tu contraseña?</h4>\n          </v-row>\n        </v-sheet>\n      </form>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\n\nimport PsychologistsApiService from \"../../core/services/psychologists-api.service\"\nimport { validationMixin } from 'vuelidate'\nimport { required, maxLength, email, minLength, numeric } from 'vuelidate/lib/validators'\n\nexport default {\n  name: \"register-psychologist\",\n  mixins: [validationMixin],\n  validations: {\n    name: { required, maxLength: maxLength(50) },\n    email: { required, email },\n    dni: { required, maxLength: maxLength(8), numeric },\n    phone: { required, maxLength: maxLength(9), minLength: minLength(9), numeric },\n    cmp: { required, maxLength: maxLength(10), numeric },\n    password: { required, maxLength: maxLength(20), minLength: minLength(8) },\n    genre: { required },\n  },\n  data: () => ({\n\n    id: 0,\n    name: \"\",\n    dni: \"\",\n    age: \"\",\n    email: \"\",\n    phone: \"\",\n    cmp: \"\",\n    specialization: \"\",\n    formation: \"\",\n    about: \"\",\n    active: false,\n    new: false,\n    password:\"\",\n    genre : \"\",\n    sessionType:\"\",\n    genreItems: [\n      'Male',\n      'Female',\n      'Others',\n    ],\n  }),\n  async created() {\n    try {\n      const response = await PsychologistsApiService.getAll();\n      this.psychologists = response.data;\n    }\n    catch (e)\n    {\n      console.error(e);\n    }\n  },\n\n  computed: {\n    nameErrors () {\n      const errors = []\n      if (!this.$v.name.$dirty) return errors\n      !this.$v.name.maxLength && errors.push('Name must be at most 10 characters long')\n      !this.$v.name.required && errors.push('Name is required.')\n      return errors\n    },\n    emailErrors () {\n      const errors = []\n      if (!this.$v.email.$dirty) return errors\n      !this.$v.email.email && errors.push('Must be valid e-mail')\n      !this.$v.email.required && errors.push('E-mail is required')\n      return errors\n    },\n    dniErrors () {\n      const errors = []\n      if (!this.$v.dni.$dirty) return errors\n      !this.$v.dni.required && errors.push('Dni is required')\n      !this.$v.dni.maxLength && errors.push('Name must be at most 8 characters long')\n      !this.$v.dni.numeric && errors.push('Only numbers')\n      return errors\n    },\n    phoneErrors () {\n      const errors = []\n      if (!this.$v.phone.$dirty) return errors\n      !this.$v.phone.required && errors.push('Phone is required')\n      !this.$v.phone.numeric && errors.push('Only numbers')\n      !this.$v.phone.maxLength && errors.push('Name must be at most 9 characters long')\n      !this.$v.phone.minLength && errors.push('Name must be at least 9 characters long')\n      return errors\n    },\n    cmpErrors () {\n      const errors = []\n      if (!this.$v.cmp.$dirty) return errors\n      !this.$v.cmp.required && errors.push('Cmp is required')\n      !this.$v.cmp.numeric && errors.push('Only numbers')\n      !this.$v.cmp.maxLength && errors.push('Name must be at 10 characters long')\n      return errors\n    },\n    passwordErrors () {\n      const errors = []\n      if (!this.$v.password.$dirty) return errors\n      !this.$v.password.required && errors.push('Password is required')\n      !this.$v.password.maxLength && errors.push('Name must be at most 20 characters long')\n      !this.$v.password.minLength && errors.push('Name must be at least 8 characters long')\n      return errors\n    },\n    selectErrors () {\n      const errors = []\n      if (!this.$v.genre.$dirty) return errors\n      !this.$v.genre.required && errors.push('Item is required')\n      return errors\n    },\n  },\n\n  methods: {\n    register() {\n      if (this.$v.$invalid){\n        alert(\"Ingrese los datos correctamente\")\n        this.$v.$touch()\n        this.$v.$reset()\n      } else {\n        let psychologistObject = {\n          id : this.id,\n          name: this.name,\n          dni: this.dni,\n          age: \"age\",\n          email: this.email,\n          phone: this.phone,\n          cmp: this.cmp,\n          specialization: \"specialization\",\n          formation: \"formation\",\n          about: \"about\",\n          active: this.active,\n          img: \"imagenurl\",\n          new: this.new,\n          sessionType: \"tgrue\",\n          password: this.password,\n          genre : this.genre,}\n        PsychologistsApiService.create(psychologistObject)\n        alert(\"Registrado correctamente\")\n        this.$router.push({name: 'psychologist-login'})\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.rowT {\n  background-color: white;\n}\n</style>"]}]}